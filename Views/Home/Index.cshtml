@model IEnumerable<Dinheiro.Models.Transacao>
@{
    ViewData["Title"] = "Dashboard";
}

<div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">

    <div class="bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-lg transition-all duration-300 hover:shadow-2xl hover:-translate-y-1 flex items-center space-x-4">
        <div class="bg-green-500 p-3 rounded-full">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 10v-1m0 0c-1.657 0-3-.895-3-2s1.343-2 3-2 3-.895 3-2-1.343-2-3-2m0 0V4m0 4.001v.001'"></path></svg>
        </div>
        <div>
            <div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase">Receitas do Mês</div>
            <div class="text-2xl font-bold text-gray-800 dark:text-white">@ViewBag.TotalReceitas.ToString("C", new System.Globalization.CultureInfo("pt-BR"))</div>
        </div>
    </div>

    <div class="bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-lg transition-all duration-300 hover:shadow-2xl hover:-translate-y-1 flex items-center space-x-4">
        <div class="bg-red-500 p-3 rounded-full">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 17h8m0 0V9m0 8l-8-8-4 4-6-6"></path></svg>
        </div>
        <div>
            <div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase">Despesas do Mês</div>
            <div class="text-2xl font-bold text-gray-800 dark:text-white">@ViewBag.TotalDespesas.ToString("C", new System.Globalization.CultureInfo("pt-BR"))</div>
        </div>
    </div>

    <div class="bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-lg transition-all duration-300 hover:shadow-2xl hover:-translate-y-1 flex items-center space-x-4">
        <div class="bg-blue-500 p-3 rounded-full">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3"></path></svg>
        </div>
        <div>
            <div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase">Saldo do Mês</div>
            <div class="text-2xl font-bold @((decimal)ViewBag.Saldo >= 0 ? "text-gray-800 dark:text-white" : "text-red-500 dark:text-red-400")">@ViewBag.Saldo.ToString("C", new System.Globalization.CultureInfo("pt-BR"))</div>
        </div>
    </div>
</div>

<div class="grid grid-cols-1 lg:grid-cols-3 gap-8 mt-8">

    <div class="lg:col-span-1">
        <h2 class="text-xl font-semibold mb-4 text-gray-800 dark:text-white">Últimas Transações</h2>
        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg">
            <ul class="divide-y divide-gray-200 dark:divide-gray-700">
                @if (Model.Any())
                {
                    @foreach (var item in Model)
                    {
                        <li class="py-4 flex justify-between items-center">
                            <div>
                                <p class="font-semibold text-gray-900 dark:text-gray-100">@item.Descricao</p>
                                <p class="text-sm text-gray-500 dark:text-gray-400">@item.Categoria.Titulo</p>
                            </div>
                            <div class="text-right">
                                <p class="font-semibold @(item.Tipo == Dinheiro.Models.TipoTransacao.Receita ? "text-green-500 dark:text-green-400" : "text-red-500 dark:text-red-400")">
                                    @(item.Tipo == Dinheiro.Models.TipoTransacao.Receita ? "+ " : "- ") @item.Valor.ToString("C", new System.Globalization.CultureInfo("pt-BR"))
                                </p>
                                <p class="text-sm text-gray-500 dark:text-gray-400">@item.Data.ToString("dd/MM/yyyy")</p>
                            </div>
                        </li>
                    }
                }
                else
                {
                    <li class="py-4 text-center text-gray-500 dark:text-gray-400">Nenhuma transação registrada.</li>
                }
            </ul>
        </div>
    </div>

    <div class="lg:col-span-2">
        <h2 class="text-xl font-semibold mb-4 text-gray-800 dark:text-white">Despesas por Categoria</h2>
        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg">
            <div class="relative mx-auto w-full max-w-sm">
                <canvas id="graficoDespesas"></canvas>
            </div>
        </div>
    </div>

</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const ctx = document.getElementById('graficoDespesas');
            const labels = @Html.Raw(ViewBag.LabelsDoGrafico);
            const dataValues = @Html.Raw(ViewBag.ValoresDoGrafico);

            if (dataValues && dataValues.length > 0) {
                new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Despesas',
                            data: dataValues,
                            backgroundColor: ['#EF4444', '#3B82F6', '#F97316', '#10B981', '#8B5CF6', '#F59E0B'],
                            hoverOffset: 4
                        }]
                    },
                     options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                                labels: {
                                    color: document.documentElement.classList.contains('dark') ? '#E5E7EB' : '#4B5563'
                                }
                            }
                        }
                    }
                });
            } else {
                const context = ctx.getContext('2d');
                context.font = '16px Arial';
                context.textAlign = 'center';
                context.fillStyle = document.documentElement.classList.contains('dark') ? '#9CA3AF' : '#6B7280';
                context.fillText('Nenhuma despesa registrada no mês para exibir no gráfico.', ctx.canvas.width / 2, 50);
            }
        });
    </script>
}